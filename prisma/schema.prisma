generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart {
  product_id String    @db.Uuid
  user_id    String    @db.Uuid
  size       String    @db.VarChar(20)
  quantity   Decimal   @db.Decimal
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @map("_id") @db.Uuid
  products   products  @relation(fields: [product_id], references: [id])
  users      users     @relation(fields: [user_id], references: [id])
}

model products {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @map("_id") @db.Uuid
  catagory    String     @db.VarChar(50)
  name        String     @db.VarChar(150)
  tagname     String     @db.VarChar(150)
  price       Decimal    @db.Money
  description String
  gender      String?    @default("unisex") @db.VarChar(20)
  cover       String
  otherimages String[]
  admin       String?    @db.VarChar(100)
  tags        String[]   @db.VarChar
  created_at  DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?  @default(now()) @db.Timestamptz(6)
  cart        cart[]
  wishlist    wishlist[]
}

model reftoken {
  id      String @id @default(dbgenerated("uuid_generate_v4()")) @map("_id") @db.Uuid
  token   String
  user_id String
}

model users {
  id         String     @id @default(dbgenerated("uuid_generate_v4()")) @map("_id") @db.Uuid
  img        String?
  fullname   String     @db.VarChar(200)
  username   String     @db.VarChar(20)
  email      String     @unique @db.VarChar(150)
  password   String     @db.VarChar(100)
  created_at DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at DateTime?  @default(now()) @db.Timestamptz(6)
  cart       cart[]
  wishlist   wishlist[]
}

model wishlist {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @map("_id") @db.Uuid
  product_id String   @db.Uuid
  user_id    String   @db.Uuid
  products   products @relation(fields: [product_id], references: [id])
  users      users    @relation(fields: [user_id], references: [id])
}
